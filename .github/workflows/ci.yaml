---
name: CI

on:
  push:
    branches: [uv-migration]
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: "1" # Make tools pretty.
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

permissions: {}

jobs:
  tests:
    name: Tests with ${{ matrix.env }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.env }}
          enable_cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install tox
        run: uv tool install --python-preference only-managed --python 3.12 tox --with tox-uv

      - name: Setup tests
        run: tox run -vv --notest --skip-missing-interpreters false

      - name: Run tests
        run: tox run --skip-pkg-install


          #install-dev:
          #  name: Verify dev env
          #  runs-on: ubuntu-latest
          #  steps:
          #    - uses: actions/checkout@v4

          #    - name: Install uv
          #      uses: astral-sh/setup-uv@v3

          #    - name: Install Python
          #      if: matrix.env != '3.13'
          #      run: uv python install --python-preference only-managed ${{ matrix.env }}

          #    - name: Install in dev mode
          #      run: |
          #        uv venv
          #        uv pip install -e .[dev]

          #    - name: Try to import on Linux
          #      if: runner.os == 'Linux'
          #      run: |
          #        source .venv/bin/activate

          #        python -Ic 'import belogging; print(belogging.__version__)'
